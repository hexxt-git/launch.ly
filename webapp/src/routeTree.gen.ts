/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as Refine_ideeRouteImport } from './routes/refine_idee'
import { Route as Agent_talkRouteImport } from './routes/agent_talk'
import { Route as AppRouteRouteImport } from './routes/app/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AppIndexRouteImport } from './routes/app/index'
import { Route as AppToolsIdeaGeneratorRouteImport } from './routes/app/tools/idea-generator'

const Refine_ideeRoute = Refine_ideeRouteImport.update({
  id: '/refine_idee',
  path: '/refine_idee',
  getParentRoute: () => rootRouteImport,
} as any)
const Agent_talkRoute = Agent_talkRouteImport.update({
  id: '/agent_talk',
  path: '/agent_talk',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRouteRoute = AppRouteRouteImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppIndexRoute = AppIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppToolsIdeaGeneratorRoute = AppToolsIdeaGeneratorRouteImport.update({
  id: '/tools/idea-generator',
  path: '/tools/idea-generator',
  getParentRoute: () => AppRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/app': typeof AppRouteRouteWithChildren
  '/agent_talk': typeof Agent_talkRoute
  '/refine_idee': typeof Refine_ideeRoute
  '/app/': typeof AppIndexRoute
  '/app/tools/idea-generator': typeof AppToolsIdeaGeneratorRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/agent_talk': typeof Agent_talkRoute
  '/refine_idee': typeof Refine_ideeRoute
  '/app': typeof AppIndexRoute
  '/app/tools/idea-generator': typeof AppToolsIdeaGeneratorRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/app': typeof AppRouteRouteWithChildren
  '/agent_talk': typeof Agent_talkRoute
  '/refine_idee': typeof Refine_ideeRoute
  '/app/': typeof AppIndexRoute
  '/app/tools/idea-generator': typeof AppToolsIdeaGeneratorRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/app'
    | '/agent_talk'
    | '/refine_idee'
    | '/app/'
    | '/app/tools/idea-generator'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/agent_talk'
    | '/refine_idee'
    | '/app'
    | '/app/tools/idea-generator'
  id:
    | '__root__'
    | '/'
    | '/app'
    | '/agent_talk'
    | '/refine_idee'
    | '/app/'
    | '/app/tools/idea-generator'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRouteRoute: typeof AppRouteRouteWithChildren
  Agent_talkRoute: typeof Agent_talkRoute
  Refine_ideeRoute: typeof Refine_ideeRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/refine_idee': {
      id: '/refine_idee'
      path: '/refine_idee'
      fullPath: '/refine_idee'
      preLoaderRoute: typeof Refine_ideeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/agent_talk': {
      id: '/agent_talk'
      path: '/agent_talk'
      fullPath: '/agent_talk'
      preLoaderRoute: typeof Agent_talkRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/': {
      id: '/app/'
      path: '/'
      fullPath: '/app/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/tools/idea-generator': {
      id: '/app/tools/idea-generator'
      path: '/tools/idea-generator'
      fullPath: '/app/tools/idea-generator'
      preLoaderRoute: typeof AppToolsIdeaGeneratorRouteImport
      parentRoute: typeof AppRouteRoute
    }
  }
}

interface AppRouteRouteChildren {
  AppIndexRoute: typeof AppIndexRoute
  AppToolsIdeaGeneratorRoute: typeof AppToolsIdeaGeneratorRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppIndexRoute: AppIndexRoute,
  AppToolsIdeaGeneratorRoute: AppToolsIdeaGeneratorRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRouteRoute: AppRouteRouteWithChildren,
  Agent_talkRoute: Agent_talkRoute,
  Refine_ideeRoute: Refine_ideeRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
